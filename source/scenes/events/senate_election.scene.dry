title: Senate Elections
new-page: true
tags: event
priority: -1
view-if: (year = next_senate_election_year and month >= next_senate_election_month) or (year > next_senate_election_year)
on-departure: month_actions += 1; in_election = 0; next_senate_election_year += 2; n_elections += 1; next_senate_election_time = time + 24;
set-jump: post_election_1928

= Elections, [+ month : month +] [+ year +]

The Senate elections are to be held now.

- @Senate_election_algorithm: May we do our best...

@post_election_1928
on-arrival: {!

  // === 1. Save old seat values if not already saved ===
  for (let party of Q.parties) {
    Q["old_" + party + "_senate_r"] = Q[party + "_senate_r"] || 0;
  }

  // === 2. Compute seat changes ===
  for (let party of Q.parties) {
    let cur = Q[party + "_senate_r"] || 0;
    let old = Q["old_" + party + "_senate_r"];
    let change = cur - old;
    Q["change_" + party + "_senate_r"] = change;
    Q["str_change_" + party + "_senate_r"] = (change > 0 ? "+" : "") + change;
    Q[party + "_senate_r_disp"] = Q.use_decimals ? cur.toFixed(1) : cur;
  }

  // === 3. Update display values ===
  Q.display_rep_senate = Q.rep_senate_r;
  Q.display_dem_senate = Q.dem_senate_r;
  Q.display_other_senate = Q.other_senate_r;

  // === 4. Record election result ===
  let result = { date: Q.year + "-" + Q.month };
  for (let party of Q.parties) {
    result[party] = Q[party + "_senate_r"];
  }
  Q.senate_election_records = Q.senate_election_records || [];
  Q.senate_election_records.push(result);

  // === 5. Largest party and majority ===
  Q.largest_party_senate = "rep";
  if (Q.dem_senate_r >= Q.rep_senate_r && Q.dem_senate_r >= Q.other_senate_r) Q.largest_party_senate = "dem";
  if (Q.other_senate_r >= Q.rep_senate_r && Q.other_senate_r >= Q.dem_senate_r) Q.largest_party_senate = "other";

  Q.republican_majority_senate = Q.rep_senate_r;
  Q.democrat_majority_senate = Q.dem_senate_r;
  Q.other_majority_senate = Q.other_senate_r;

!}
on-display: {!
  function drawChart() {
    var chartData = [
      {
        id: "republicans",
        seats: Math.round(Q.rep_senate_r),
        color: "#E3000F",
        outline: "#E3000F"
      },
      {
        id: "democrats",
        seats: Math.round(Q.dem_senate_r),
        color: "#0015BC",
        outline: "#0015BC"
      },
      {
        id: "others",
        seats: Math.round(Q.other_senate_r),
        color: "#00cc00",
        outline: "#a0a0a0"
      }
    ].filter(d => d.seats > 0);

    var width = Math.min(500, document.getElementById('content').offsetWidth - 50);
    var container = d3.select("#reichstag");
    if (container.empty()) {
      container = d3.select("#content").append("svg").attr("id", "reichstag");
    }
    container.attr("width", width).attr("height", width / 2).html("");

    var parliament = d3.parliament().width(width).innerRadiusCoef(0.4);
    container.data([chartData]).call(parliament);
  }

  if (!window.d3) {
    var script = document.createElement('script');
    script.src = 'https://d3js.org/d3.v7.min.js';
    script.onload = function() {
      var subscript = document.createElement('script');
      subscript.src = 'https://cdn.jsdelivr.net/npm/d3-parliament@1.0.3/build/d3-parliament.min.js';
      subscript.onload = drawChart;
      document.head.appendChild(subscript);
    };
    document.head.appendChild(script);
  } else if (!window.d3.parliament) {
    var script = document.createElement('script');
    script.src = 'https://cdn.jsdelivr.net/npm/d3-parliament@1.0.3/build/d3-parliament.min.js';
    script.onload = drawChart;
    document.head.appendChild(script);
  } else {
    drawChart();
  }
!}

go-to: coalition_menu

= Senate Election Results

{!<svg id="reichstag" style="width: 500px; height: 250px;"> </svg>!}

{!<table>!}
{!<tr><td>Party</td><td>Seats</td><td>Change</td></tr>!}

{!<tr><td><div class="box" style='background-color:#E3000F; outline: 2px solid;'> </div> !} **Republicans:** {!</td><td>!} [+ display_rep_senate +] seats {!</td><td>!} [+ str_change_rep_senate_r +] {!</td></tr>!}

{!<tr><td><div class="box" style='background-color:#0015BC'> </div> !} Democrats: {!</td><td>!} [+ display_dem_senate +] seats {!</td><td>!} [+ str_change_dem_senate_r +] {!</td></tr>!}

{!<tr><td><div class="box" style='background-color:#a0a0a0'> </div> !} Others: {!</td><td>!} [+ display_other_senate +] seats {!</td><td>!} [+ str_change_other_senate_r +] {!</td></tr>!}
{!</table>!}

@coalition_menu

- @simple_majority
- @super_majority
- @defeat
- @tie

@simple_majority
title: Republicans get a simple majority
subtitle: Repubicans: [+ rep_senate_r +] seats
view-if: {! 
rep_senate_r > num_states && rep_senate_r < Math.ceil(Q.num_states * 2 * (2/3))
!}
on-arrival: sen_majority = 1;

The Republicans have gained a simple majority in the Senate!

@super_majority
title: Republicans get a super majority
subtitle: Repubicans: [+ rep_senate_r +] seats
view-if: {!
rep_senate_r >= Math.ceil(Q.num_states * 2 * (2/3))
!}
on-arrival: sen_majority = 1;

The Republicans have gained a supermajority in the Senate! Now they can override any presidential veto.

@defeat
title: Republicans have lost the election
subtitle: Repubicans: [+ rep_senate_r +] seats
view-if: dem_senate_r > rep_senate_r 
on-arrival: sen_majority = 0;

The Republicans have lost control of the Senate to the Democrats.

@tie
title: A TIE?!?!?!?
subtitle: I guess there is no government today
view-if: rep_senate_r = dem_senate_r
on-arrival: sen_majority = 0;

In a complete shock, the Senate election has ended in a tie! [? if president_party = rep: But we have the VP on our side who can serve as the tiebreaking vote ?][? if president_party = dem: But the democrats have the VP their our side who can serve as the tiebreaking vote ?]
