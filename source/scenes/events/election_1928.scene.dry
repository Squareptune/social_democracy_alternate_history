title: Senate Elections
new-page: true
tags: event
priority: -1
view-if: (year = next_election_year and month >= next_election_month) or (year > next_election_year)
on-departure: month_actions += 1; in_election = 0; next_election_year = next_election_year + 4; n_elections += 1; next_election_time = time + 48; papen_chancellor_timer = 4;
set-jump: post_election_1928
face-image: img/Rothe_Wahlen_1903.jpg

= Elections, [+ month : month +] [+ year +]

The Senate elections are to be held now.

- @election_algorithm: May we do our best...

@post_election_1928
on-arrival: {!
// set old results
// election threshold constitutional reform
// banning parties
var new_party_sum = 0;
for (var party of Q.parties) {
    Q['old_' + party + '_senate_r'] = Q[party + '_senate_r'];
    if (Q.constitutional_reform > 0) {
        if (Q[party + '_votes'] < Q.electoral_threshold || (Q.electoral_threshold > 1 && party == 'other') || Q[party + '_banned']) {
            Q[party + '_senate_r'] = 0;
        } else {
            Q[party + '_senate_r'] = Q[party + '_votes'];
        }
        new_party_sum += Q[party + '_senate_r'];
    } else {
        Q[party + '_senate_r'] = Q[party + '_votes'];
    }
    // if we use decimals, then we might want to truncate the numbers
    if (Q.use_decimals) {
        Q[party + '_senate_r_disp'] = Q[party+'_senate_r'].toFixed(1);
    }  else {
            Q[party + '_senate_r_disp'] = Q[party+'_senate_r'];
    }
    Q['change_' + party + '_senate_r'] = Q[party + '_senate_r'] - Q['old_' + party + '_senate_r'];
    var sign = Q['change_' + party + '_senate_r'] > 0 ? '+'  : '';
    Q['str_change_' + party] = sign + Q['change_' + party + '_senate_r'];//.toFixed(1);
}
// calculate new party sum if electoral reform
if (Q.electoral_threshold && Q.electoral_threshold > 0) {
    for (var party of Q.parties) {
        if (Q[party + '_senate_r'] > 0) {
            if (Q.use_decimals) {
                Q[party + '_senate_r'] = Math.round(Q[party + '_senate_r']*1000/new_party_sum)/10;
            } else {
                Q[party + '_senate_r'] = Math.round(Q[party + '_senate_r']*100/new_party_sum);
            }
        }
        if (Q.use_decimals) {
            Q[party + '_senate_r_disp'] = Q[party+'_senate_r'].toFixed(1);
        } else {
            Q[party + '_senate_r_disp'] = Q[party+'_senate_r'];
        }
        Q['change_' + party + '_senate_r'] = Q[party + '_senate_r'] - Q['old_' + party + '_senate_r'];
        var sign = Q['change_' + party + '_senate_r'] > 0 ? '+'  : '';
        Q['str_change_' + party] = sign + Q['change_' + party + '_senate_r'];//.toFixed(1);
    }
}

// get change arrows and signs


// The largest party can only be the Republicans or the Democrats.
Q.largest_party = 'rep';
if (Q.dem_senate_r >= Q.rep_senate_r && Q.dem_senate_r >= Q.other_senate_r) {
    Q.largest_party = 'dem';
}

if (Q.other_senate_r >= Q.rep_senate_r && Q.other_senate_r >= Q.dem_senate_r) {
    Q.largest_party = 'other';
}

// coalitions
Q.republican_majority = Q.rep_senate_r;
Q.democrat_majority = Q.dem_senate_r;
Q.other_majority = Q.other_senate_r;

var election_result = {'date': new Date(Q.year, Q.month - 1)};
for (var party of Q.parties) {
    election_result[party] = Q[party + '_senate_r'];
}
Q.election_records.push(election_result);
!}
on-departure: republican_urgency = 1 if (republican_urgency == 0 and rep_senate_r >= 15)
on-display: {!
  // Load required libraries
  function loadScript(src, callback) {
    var script = document.createElement('script');
    script.src = src;
    script.onload = callback;
    document.head.appendChild(script);
  }

  function drawChart() {
    // Prepare data in correct format
    var chartData = [
      {
        "id": "republicans",
        "seats": Math.round(Q.rep_senate_r), // Use direct seat count
        "color": "#E3000F",
        "outline": "#003399"
      },
      {
        "id": "democrats",
        "seats": Math.round(Q.dem_senate_r),
        "color": "#00AEF3",
        "outline": "#990000"
      },
      {
        "id": "others",
        "seats": Math.round(Q.other_senate_r),
        "color": "#00cc00",
        "outline": "#009900"
      }
    ].filter(function(d) { return d.seats > 0; }); // Remove parties with 0 seats

    // Set up container
    var container = d3.select("#reichstag");
    var width = Math.min(500, document.getElementById('content').offsetWidth - 50);
    var height = width * 0.5;
    
    container.attr("width", width)
             .attr("height", height)
             .html(""); // Clear previous chart

    // Create parliament chart
    var parliament = d3.parliament()
      .width(width)
      .height(height)
      .innerRadiusCoef(0.4);

    container.datum(chartData)
      .call(parliament);
  }

  // Load dependencies sequentially
  if (!window.d3) {
    loadScript('https://d3js.org/d3.v7.min.js', function() {
      loadScript('https://cdn.jsdelivr.net/npm/d3-parliament@1.0.3/build/d3-parliament.min.js', drawChart);
    });
  } else if (!window.d3.parliament) {
    loadScript('https://cdn.jsdelivr.net/npm/d3-parliament@1.0.3/build/d3-parliament.min.js', drawChart);
  } else {
    drawChart();
  }
!}
go-to: coalition_menu

= Election results

{!<svg id="reichstag" style="width: 500px; height: 250px;"> </svg>!}

{!<table>!} 
{!<tr><td>Party</td><td>Vote share</td><td>% Change</td></tr>!}
{!<tr><td><div class="box" style='background-color:#E3000F; outline: 2px; outline-style: solid;'> </div> !} **Republicans:** {!</td><td>!} **[+ rep_senate_r +] seats** {!</td><td>!} **[+ str_change_rep +]** {!</td></tr>!}

{!<tr><td><div class="box" style='background-color:#00AEF3'> </div> !}Democrats: {!</td><td>!} [+ dem_senate_r +]% {!</td><td>!} [+ str_change_dem +] {!</td></tr>!}
 
{!<tr><td><div class="box" style='background-color:#a0a0a0'> </div> !} Others: {!</td><td>!} [+ other_senate_r +] % {!</td><td>!} [+ str_change_other +] {!</td></tr>!}

{!<tr><td><div class="box" style='background-color:#DCCA4A'> </div> !} Vacants: {!</td><td>!} [+ vacant_senate_r +]% {!</td><td>!} [+ str_change_vacant +] {!</td></tr>!}
{!</table>!}

@coalition_menu

- @simple_majority
- @super_majority
- @defeat
- @tie


@simple_majority
title: Republicans get a simple majority
subtitle: Repubicans: [+ rep_senate_r +] seats
view-if: (rep_senate_r >= 51) and (rep_senate_r < 67)
on-arrival: speaker = "Colfax"; speaker_party = "Rep"; pro_republic += 5;

The Republicans have gained a simple majority in the Senate!

@super_majority
title: Republicans get a super majority
subtitle: Repubicans: [+ rep_senate_r +] seats
view-if: rep_senate_r >= 67
on-arrival: speaker = "Colfax"; speaker_party = "Rep"; pro_republic += 5;

The Republicans have gained a super majority in the Senate! Now they can override any presidential veto.

@defeat
title: Republicans have lost the election
subtitle: Repubicans: [+ rep_senate_r +] seats
view-if: dem_senate_r > rep_senate_r
on-arrival: speaker = "Wood"; speaker_party = "Dem"

The Republicans have lost control of the Senate to the Democrats.

@tie
title: A TIE?!?!?!?
subtitle: I guess there is no government today
view-if: rep_senate_r = dem_senate_r
on-arrival: speaker = "Richardson";

In a complete shock, the Senate election has ended in a tie! As a compromise, the parties agree on William A. Richardson as the Senate leader.
