title: Amendment Support Check
on-arrival: {!

let supportiveStates = 0;
let totalStates = Q.states.length;

for (let state of Q.states) {
  let repVotes = 0;
  let demVotes = 0;
  let otherVotes = 0;

  for (let cls of Q.classes) {
    let pop = Q[state + "_" + cls] || 0;

    let rep = Q[state + "_" + cls + "_rep"] || 0;
    let dem = Q[state + "_" + cls + "_dem"] || 0;
    let other = Q[state + "_" + cls + "_other"] || 0;

    let repMod = Q[cls + "_rep"] || 0;
    let demMod = Q[cls + "_dem"] || 0;
    let otherMod = Q[cls + "_other"] || 0;

    let adjRep = 0.2 * rep + 0.8 * repMod;
    let adjDem = 0.2 * dem + 0.8 * demMod;
    let adjOther = 0.2 * other + 0.8 * otherMod;

    let totalAdj = adjRep + adjDem + adjOther;
    if (totalAdj === 0) continue;

    repVotes += pop * (adjRep / totalAdj);
    demVotes += pop * (adjDem / totalAdj);
    otherVotes += pop * (adjOther / totalAdj);
  }

  if (repVotes > demVotes && repVotes > otherVotes) {
    supportiveStates += 1;
  }
}

// Amendment passes if 3/4 of states support
Q.amendmentResult = (supportiveStates >= Math.ceil(0.75 * totalStates)) ? 1 : 0;

!}
